worker_processes 1;

# 'user nobody nobody;' for systems with 'nobody' as a group instead
user nobody nogroup; # owner and group of nginx child processes
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  # sendfile on;

  upstream django_template_proj {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server web:8000 fail_timeout=0;
  }

  #server {
    # if no Host match, close the connection to prevent host spoofing
  #  listen 80 default_server;
  #  return 404 "default_server";
  #}

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    server_tokens off; # hide nginx version
    client_max_body_size 25M;
    # breach security issue handling on gzip and brotli
    #listen 443 ssl http2;
	#listen [::]:443 ssl ipv6only=on http2;

    ##
    # Gzip Settings
    ##



    ##
    # Brotli Settings
    ##

    # Dynamic mode.
    #brotli on;
    #brotli_comp_level 6;
    #brotli_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss;

    # Static mode.
    #brotli_static on;

    # set the correct host(s) for your site
    # server_name django_template_proj.com www.django_template_proj.com;

    keepalive_timeout 5;

    # path for static files
    # root /opt/static/django_template_proj/;

    location / {
        proxy_pass http://django_template_proj;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # generate URL scheme correctly (i.e http or https)
        proxy_set_header Host $host;
        proxy_redirect off; # let django handle redirect
    }

    location /static/ {
        autoindex off; # don't let listing the files

        # In this case, to service a request for /path/to/file, NGINX tries to find and send the file /path/to/file.gz.
        # If the file doesnâ€™t exist, or the client does not support gzip, NGINX sends the uncompressed version of the file.
        gzip_static on;

        # Disable dynamic compression (optional, and not recommended if you're proxying)
        gzip off;

        sendfile on;
        # to successfully serve both clients that do and do not accept compressed data,
        # NGINX can decompress data on the fly when sending it to the latter type of client.
        # gunzip on;
        # The alias directive can only be placed in a location block.
        # Placing a alias directive in a location block overrides the root or alias directive that was applied at a higher scope.
        alias /opt/static/django_template_proj/;

        # browser do not download files for one year unless file name change
        # STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
        # will do this each time we use 'manage.py collectstatic'
        expires +1y;
    }

    location /media/ {
        autoindex off;
        alias /opt/media/django_template_proj/;
    }



    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /opt/static/public/error_pages/;
    }
  }
}